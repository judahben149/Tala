CREATE TABLE voices (
    voice_id TEXT NOT NULL PRIMARY KEY,
    name TEXT NOT NULL,
    gender TEXT,
    category TEXT NOT NULL,
    description TEXT,
    preview_url TEXT,
    is_owner INTEGER NOT NULL DEFAULT 0,
    is_featured INTEGER NOT NULL DEFAULT 0,
    liked_count INTEGER NOT NULL DEFAULT 0,
    created_at INTEGER NOT NULL,
    updated_at INTEGER NOT NULL,
                                   is_selected INTEGER NOT NULL DEFAULT 0
);

CREATE TABLE voice_cache_metadata (
    id INTEGER NOT NULL PRIMARY KEY DEFAULT 1,
    last_fetched INTEGER NOT NULL,
    voices_count INTEGER NOT NULL DEFAULT 0
);

-- Voice queries
getAllVoices:
SELECT * FROM voices ORDER BY name ASC;

getFeaturedVoices:
SELECT * FROM voices WHERE is_featured = 1 ORDER BY liked_count DESC;

getVoicesByGender:
SELECT * FROM voices WHERE gender = ? ORDER BY name ASC;

getVoiceById:
SELECT * FROM voices WHERE voice_id = ?;

insertVoice:
INSERT OR REPLACE INTO voices(voice_id, name, gender, category, description, preview_url, is_owner, is_featured, liked_count, created_at, updated_at, is_selected)
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

deleteAllVoices:
DELETE FROM voices;

-- Cache metadata queries
getCacheMetadata:
SELECT * FROM voice_cache_metadata WHERE id = 1;

updateCacheMetadata:
INSERT OR REPLACE INTO voice_cache_metadata(id, last_fetched, voices_count)
VALUES (1, ?, ?);

getSelectedVoice:
SELECT * FROM voices WHERE is_selected = 1 LIMIT 1;

deselectAllVoices:
UPDATE voices SET is_selected = 0 WHERE is_selected = 1;

selectVoiceById:
UPDATE voices SET is_selected = 1 WHERE voice_id = ?;